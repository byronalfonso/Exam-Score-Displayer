{"version":3,"sources":["main.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","navigator","protocol","serviceWorker","register","then","registration","onupdatefound","controller","installingWorker","installing","onstatechange","state","Error","e","console","error","el","document","getElementById","options","percent","getAttribute","size","lineWidth","rotate","canvas","createElement","textContainer","total","span","textContent","G_vmlCanvasManager","initElement","ctx","getContext","width","height","appendChild","translate","Math","PI","radius","drawCircle","color","min","max","beginPath","arc","strokeStyle","lineCap","stroke"],"mappings":";;;;;;;;;;;;;;;;;;CAmBA,WACA,YAMA,IAAAA,GAAAC,QAAA,cAAAC,OAAAC,SAAAC,UAEA,UAAAF,OAAAC,SAAAC,UAEAF,OAAAC,SAAAC,SAAAC,MACA,0DAIA,kBAAAC,aACA,WAAAJ,OAAAC,SAAAI,UAAAP,IACAM,UAAAE,cAAAC,SAAA,qBACAC,KAAA,SAAAC,GAEAA,EAAAC,cAAA,WAKA,GAAAN,UAAAE,cAAAK,WAAA,CAGA,GAAAC,GAAAH,EAAAI,UAEAD,GAAAE,cAAA,WACA,OAAAF,EAAAG,OACA,IAAA,YAKA,KAEA,KAAA,YACA,KAAA,IAAAC,OAAA,yDAvBAZ,SAgCA,SAAAa,GACAC,QAAAC,MAAA,4CAAAF,IAKA,IAAAG,GAAAC,SAAAC,eAAA,SAEAC,GACAC,QAAAJ,EAAAK,aAAA,iBAAA,GACAC,KAAAN,EAAAK,aAAA,cAAA,IACAE,UAAAP,EAAAK,aAAA,cAAA,GACAG,OAAAR,EAAAK,aAAA,gBAAA,GAGAI,EAAAR,SAAAS,cAAA,UAGAC,EAAAV,SAAAS,cAAA,OACAE,EAAAX,SAAAS,cAAA,QACAG,EAAAZ,SAAAS,cAAA,OAEAE,GAAAE,YAAA,QACAD,EAAAC,YAAAX,EAAAC,QAAA,IAEA,mBAAA,qBACAW,mBAAAC,YAAAP,EAGA,IAAAQ,GAAAR,EAAAS,WAAA,KACAT,GAAAU,MAAAV,EAAAW,OAAAjB,EAAAG,KAEAK,EAAAU,YAAAT,GACAD,EAAAU,YAAAR,GACAb,EAAAqB,YAAAV,GACAX,EAAAqB,YAAAZ,GAEAQ,EAAAK,UAAAnB,EAAAG,KAAA,EAAAH,EAAAG,KAAA,GACAW,EAAAT,YAAAL,EAAAK,OAAA,KAAAe,KAAAC,GAGA,IAAAC,IAAAtB,EAAAG,KAAAH,EAAAI,WAAA,EAEAmB,EAAA,SAAAC,EAAApB,EAAAH,GACAA,EAAAmB,KAAAK,IAAAL,KAAAM,IAAA,EAAAzB,GAAA,GAAA,GACAa,EAAAa,YACAb,EAAAc,IAAA,EAAA,EAAAN,EAAA,EAAA,EAAAF,KAAAC,GAAApB,GAAA,GACAa,EAAAe,YAAAL,EACAV,EAAAgB,QAAA,OACAhB,EAAAV,UAAAA,EACAU,EAAAiB,SAGAR,GAAA,UAAAvB,EAAAI,UAAA,GACAmB,EAAA,UAAAvB,EAAAI,UAAAJ,EAAAC,QAAA","file":"main.min.js","sourcesContent":["/*!\n *\n *  Web Starter Kit\n *  Copyright 2015 Google Inc. All rights reserved.\n *\n *  Licensed under the Apache License, Version 2.0 (the \"License\");\n *  you may not use this file except in compliance with the License.\n *  You may obtain a copy of the License at\n *\n *    https://www.apache.org/licenses/LICENSE-2.0\n *\n *  Unless required by applicable law or agreed to in writing, software\n *  distributed under the License is distributed on an \"AS IS\" BASIS,\n *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n *  See the License for the specific language governing permissions and\n *  limitations under the License\n *\n */\n/* eslint-env browser */\n(function() {\n  'use strict';\n\n  // Check to make sure service workers are supported in the current browser,\n  // and that the current page is accessed from a secure origin. Using a\n  // service worker from an insecure origin will trigger JS console errors. See\n  // http://www.chromium.org/Home/chromium-security/prefer-secure-origins-for-powerful-new-features\n  var isLocalhost = Boolean(window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n    );\n\n  if ('serviceWorker' in navigator &&\n      (window.location.protocol === 'https:' || isLocalhost)) {\n    navigator.serviceWorker.register('service-worker.js')\n    .then(function(registration) {\n      // updatefound is fired if service-worker.js changes.\n      registration.onupdatefound = function() {\n        // updatefound is also fired the very first time the SW is installed,\n        // and there's no need to prompt for a reload at that point.\n        // So check here to see if the page is already controlled,\n        // i.e. whether there's an existing service worker.\n        if (navigator.serviceWorker.controller) {\n          // The updatefound event implies that registration.installing is set:\n          // https://slightlyoff.github.io/ServiceWorker/spec/service_worker/index.html#service-worker-container-updatefound-event\n          var installingWorker = registration.installing;\n\n          installingWorker.onstatechange = function() {\n            switch (installingWorker.state) {\n              case 'installed':\n                // At this point, the old content will have been purged and the\n                // fresh content will have been added to the cache.\n                // It's the perfect time to display a \"New content is\n                // available; please refresh.\" message in the page's interface.\n                break;\n\n              case 'redundant':\n                throw new Error('The installing ' +\n                                'service worker became redundant.');\n\n              default:\n                // Ignore\n            }\n          };\n        }\n      };\n    }).catch(function(e) {\n      console.error('Error during service worker registration:', e);\n    });\n  }\n\n  // Your custom JavaScript goes here\n  var el = document.getElementById('graph'); // get canvas\n\n  var options = {\n      percent:  el.getAttribute('data-percent') || 25,\n      size: el.getAttribute('data-size') || 115,\n      lineWidth: el.getAttribute('data-line') || 15,\n      rotate: el.getAttribute('data-rotate') || 0\n  }\n\n  var canvas = document.createElement('canvas');\n\n  // text related\n  var textContainer = document.createElement('div');\n  var total = document.createElement('span');\n  var span = document.createElement('span');\n\n  total.textContent = 'TOTAL';\n  span.textContent = options.percent + '%';\n      \n  if (typeof(G_vmlCanvasManager) !== 'undefined') {\n      G_vmlCanvasManager.initElement(canvas);\n  }\n\n  var ctx = canvas.getContext('2d');\n  canvas.width = canvas.height = options.size;\n\n  textContainer.appendChild(total);\n  textContainer.appendChild(span);\n  el.appendChild(textContainer);\n  el.appendChild(canvas);\n\n  ctx.translate(options.size / 2, options.size / 2); // change center\n  ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg\n\n  //imd = ctx.getImageData(0, 0, 240, 240);\n  var radius = (options.size - options.lineWidth) / 2;\n\n  var drawCircle = function(color, lineWidth, percent) {\n      percent = Math.min(Math.max(0, percent || 1), 1);\n      ctx.beginPath();\n      ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);\n      ctx.strokeStyle = color;\n          ctx.lineCap = 'butt'; // butt, round or square\n      ctx.lineWidth = lineWidth\n      ctx.stroke();\n  };\n\n  drawCircle('#e7e7e7', options.lineWidth, 100 / 100);\n  drawCircle('#007bb8', options.lineWidth, options.percent / 100);\n})();\n"]}